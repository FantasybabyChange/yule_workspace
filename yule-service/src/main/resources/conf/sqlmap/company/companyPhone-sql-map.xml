<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yule.company.dao.ICompanyPhoneDao">
	<resultMap type="companyPhone" id="companyPhone-sql-map">
		<id     property="id"          column="ID" />
		<result property="company_id"  column="COMPANY_ID" />
		<result property="name"        column="NAME" />
		<result property="phone"       column="PHONE" />
		<result property="type"        column="TYPE" />
		<result property="create_time" column="CREATE_TIME" />
		<result property="update_time" column="UPDATE_TIME" />
	</resultMap>
	
	<sql id="companyPhone_first">
		ID,COMPANY_ID,NAME,PHONE,TYPE,CREATE_TIME,UPDATE_TIME
	</sql>

	<select id="findCompanyPhoneList" parameterType="java.lang.String" resultMap="companyPhone-sql-map">
		select ID,COMPANY_ID,NAME,PHONE ,TYPE from company_phone 
		<where>
			COMPANY_ID = #{companyId} 
		</where>
		ORDER BY CREATE_TIME DESC 
	</select>
	
	<update id="batchUpdateCompanyPhone" parameterType="list">
		<foreach collection="list" item="item" index="index" open="" separator=";" close=""> 
			update company_phone
			<set>
				NAME = #{item.name},
				PHONE = #{item.phone},
				UPDATE_TIME = now()
			</set>
			where ID =  #{item.id}
	    </foreach>  
	</update>
	
	<insert id="insertCompanyPhone" parameterType="companyPhone">
		insert into company_phone(
		ID,COMPANY_ID,NAME,PHONE,TYPE,CREATE_TIME
		)
		values(#{id},#{company_id},#{name},#{phone},#{type},now())
	</insert>

	<update id="updateCompanyPhone" parameterType="companyPhone">
		update company_phone
		<set>
			<if test="name != null and name != '' ">
				NAME = #{name},
			</if>
			<if test="phone != null and phone != '' ">
				PHONE = #{phone},
			</if>
			UPDATE_TIME = now()
		</set>
		where ID = #{id}
	</update>

	<delete id="deleteCompanyPhoneById" parameterType="java.lang.String">
		delete from company_phone where ID = #{id}
	</delete>
	
</mapper>
